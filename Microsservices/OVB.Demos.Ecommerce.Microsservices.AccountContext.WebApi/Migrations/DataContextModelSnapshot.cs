// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using OVB.Demos.Ecommerce.Microsservices.AccountContext.Infrascructure.Data;

#nullable disable

namespace OVB.Demos.Ecommerce.Microsservices.AccountContext.WebApi.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("OVB.Demos.Ecommerce.Microsservices.AccountContext.Domain.DataTransferObject.Account", b =>
                {
                    b.Property<Guid>("Identifier")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("VARCHAR")
                        .HasColumnName("Email");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("VARCHAR")
                        .HasColumnName("Password");

                    b.Property<int>("TypeAccount")
                        .HasColumnType("integer");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("VARCHAR")
                        .HasColumnName("Username");

                    b.HasKey("Identifier")
                        .HasName("PK_ACCOUNT_IDENTIFIER");

                    b.HasIndex("Identifier")
                        .IsUnique()
                        .HasDatabaseName("UK_ACCOUNT_IDENTIFIER");

                    b.HasIndex("Username", "Email")
                        .IsUnique()
                        .HasDatabaseName("UK_ACCOUNT_EMAIL_USERNAME");

                    b.ToTable("Account");
                });
#pragma warning restore 612, 618
        }
    }
}
