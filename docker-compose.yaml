version: "3.9"

services:
  postgres:
    image: postgres
    container_name: postgres
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: 1234
    ports:
      - "5432:5432"
    restart: always
    networks: 
      - ovb-demos-ecommerce

  postgres-synchronizer:
    image: postgres
    container_name: postgres-synchronizer
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: 1234
    ports:
      - "5433:5432"
    restart: always
    networks: 
      - ovb-demos-ecommerce-synchronizer

  pgadmin:
    image: dpage/pgadmin4
    user: root
    container_name: pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: "otavio@otavio.com"
      PGADMIN_DEFAULT_PASSWORD: "1234"
    ports:
      - "8080:80"
    restart: always
    links:
      - postgres
    depends_on:
      - postgres
    networks:
      - ovb-demos-ecommerce

  pgadmin-synchronizer:
    image: dpage/pgadmin4
    user: root
    container_name: pgadmin-synchronizer
    environment:
      PGADMIN_DEFAULT_EMAIL: "otavio@otavio.com"
      PGADMIN_DEFAULT_PASSWORD: "1234"
    ports:
      - "8081:80"
    restart: always
    links:
      - postgres-synchronizer
    depends_on:
      - postgres-synchronizer
    networks:
      - ovb-demos-ecommerce-synchronizer

  rabbitmq:
    image: rabbitmq:3.11.10-management-alpine
    container_name: rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    ports:
      - "5672:5672"
      - "15672:15672"
    restart: always
    networks:
      - ovb-demos-ecommerce

  account-microsservice-webgprc:
    hostname: "localhost"
    build:
      context: .
      dockerfile: accountWebGrpc.Dockerfile
    volumes:
      - "${PWD}/src/account/OVB.Demos.Ecommerce.Microsservices.AccountManagement.WebGrpc/volumes.json:/app/appsettings.json"
    ports: 
      - 5200:5200
    networks:
      - ovb-demos-ecommerce
    depends_on:
      - rabbitmq
      - postgres

  account-microsservice-worker:
    build:
      context: .
      dockerfile: accountWorker.Dockerfile
    volumes:
      - "${PWD}/src/account/OVB.Demos.Ecommerce.Microsservices.AccountManagement.Synchronizer.Worker/volumes.json:/app/appsettings.json"
    networks:
      - ovb-demos-ecommerce
    depends_on:
      - postgres-synchronizer
      - account-microsservice-webgprc

  apigateway: 
    build:
      context: .
      dockerfile: apigateway.Dockerfile
    volumes:
      - "${PWD}/src/apigateway/OVB.Demos.Ecommerce.Microsservices.ApiGateway.WebApi/volumes.json:/app/appsettings.json"
    ports: 
      - 8090:8090
    networks:
      - ovb-demos-ecommerce
        

networks:
  ovb-demos-ecommerce:
    driver: bridge  
  ovb-demos-ecommerce-synchronizer:
    driver: bridge